<project name="javi" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib.dir"  location="."/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <pathelement location="c:\\Progra~1\\Java\\jdk1.7.0_11\\lib\\tools.jar"/>
        <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
    </path>

   <!-- mycp="$myprog;$myprog\juniversalchardet-1.0.3.jar;$myprog\rhino1_7R2\js.jar;$myprog\junit3.8.2\junit.jar;$JDK2\lib\tools.jar" -->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="ID">
   <exec executable="ctags" >
      <arg value="-n" />
      <arg value="-R" />
      <arg value="src" />
   </exec>
   <exec executable="mkid" >
      <arg value="src" />
   </exec>
  </target>

  <target name="depend">
     <depend srcdir="${src}" destdir="${build}"
           cache="depcache" closure="yes">
       <include name="**/*.java"/>
       <excludesfile name="${java.dir}/build_excludes"/>
     </depend>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" debug="on" srcdir="${src}" destdir="${build}" classpathref="classpath"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar manifest="Manifest.txt" jarfile="${dist}/lib/javi-${DSTAMP}.jar" basedir="${build}"/>
    <jar manifest="Manifest.txt" jarfile="${dist}/javi.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
